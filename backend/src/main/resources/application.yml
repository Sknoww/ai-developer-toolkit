server:
    port: 8090

spring:
    application:
        name: ai-developer-toolkit

    datasource:
        url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:portfolio_dev}
        username: ${DB_USER:dev_user}
        password: ${DB_PASSWORD:dev_password}
        driver-class-name: org.postgresql.Driver
        hikari:
            maximum-pool-size: 10
            minimum-idle: 5
            connection-timeout: 20000

    jpa:
        hibernate:
            ddl-auto: none
        show-sql: false
        properties:
            hibernate:
                dialect: org.hibernate.dialect.PostgreSQLDialect
                format_sql: true
                use_sql_comments: true
        open-in-view: false
        defer-datasource-initialization: true

    flyway:
        enabled: true
        locations: classpath:db/migration
        baseline-on-migrate: true
        validate-on-migrate: false
        clean-disabled: false
        baseline-version: 0

    data:
        redis:
            host: ${REDIS_HOST:localhost}
            port: ${REDIS_PORT:6379}
            timeout: 2000ms
            jedis:
                pool:
                    max-active: 8
                    max-idle: 8
                    min-idle: 0

management:
    endpoints:
        web:
            exposure:
                include: health,info,metrics,flyway
    endpoint:
        health:
            show-details: when-authorized
            show-components: always
    info:
        env:
            enabled: true

logging:
    level:
        com.portfolio.toolkit: INFO
        org.flywaydb: DEBUG

# AI Configuration
ai:
    openai:
        api-key: ${OPENAI_API_KEY:}
        base-url: ${OPENAI_BASE_URL:https://api.openai.com/v1}
        timeout: 30000
    anthropic:
        api-key: ${ANTHROPIC_API_KEY:}
        base-url: ${ANTHROPIC_BASE_URL:https://api.anthropic.com}
        timeout: 30000

# Custom application properties
app:
    jwt:
        secret: ${JWT_SECRET:your-secret-key}
        expiration: ${JWT_EXPIRATION:86400}
    cors:
        allowed-origins: ${CORS_ORIGINS:http://localhost:3000,http://localhost:3001}
    features:
        ai-documentation: true
        rate-limiting: true
